swagger: "2.0"

info:
  version: 0.1.0
  title: Online
  description: Yakit Online Service

schemes:
  - http

basePath: /api

consumes:
  - application/json

produces:
  - application/json
  - application/octet-stream

securityDefinitions:
  user:
    type: apiKey
    in: header
    name: Authorization
  trusted:
    type: apiKey
    in: header
    name: Authorization

security:
  - user: []

paths:
  /yakit/plugin/fetch:
    get:
      parameters:
        - in: query
          type: integer
          name: id
      responses:
        200:
          description: "查询 YakitPlugin 记录"
          schema:
            $ref: "#/definitions/YakitPlugin"
  /yakit/plugin:
    get:
      parameters:
        - $ref: "#/parameters/Page"
        - $ref: "#/parameters/Order"
        - $ref: "#/parameters/Limit"
        - $ref: "#/parameters/OrderBy"
        - in: query
          type: string
          name: name
      responses:
        200:
          description: "查询 YakitPlugin 记录"
          schema:
            $ref: "#/definitions/YakitPluginsResponse"
    post:
      parameters:
        - in: body
          name: Data
          schema:
            $ref: "#/definitions/NewYakitPlugin"
      responses:
        200:
          $ref: "#/responses/ActionSucceeded"
    delete:
      parameters:
        - in: query
          name: id
          type: integer
      responses:
        200:
          $ref: "#/responses/ActionSucceeded"
  /yakit/plugin/tags:
    get:
      parameters: [ ]
      responses:
        200:
          description: "查询 /yakit/plugin  所有的Tags"
          schema:
            type: array
            items:
              type: string
    post:
      parameters:
        - in: query
          type: integer
          name: id
          required: true
        - in: query
          type: string
          enum:
            - add
            - set
          name: op
        - in: query
          type: array
          items:
            type: string
          name: tags
      responses:
        200:
          $ref: "#/responses/ActionSucceeded"

responses:
  ActionSucceeded:
    description: API 调用成功
    schema:
      $ref: '#/definitions/ActionSucceeded'
  ActionFailed:
    description: API 调用失败
    schema:
      $ref: '#/definitions/ActionFailed'

parameters:
  Page:
    name: page
    in: query
    type: integer
    default: 1
  Limit:
    name: limit
    type: integer
    in: query
    default: 20
  OrderBy:
    name: order_by
    type: string
    in: query
  Order:
    name: order
    type: string
    in: query
    default: "desc"
    enum:
      - asc
      - desc

definitions:
  YakitPluginsResponse:
    allOf:
      - $ref: "#/definitions/Paging"
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/YakitPlugin"
  YakitPlugin:
    allOf:
      - $ref: "#/definitions/GormBaseModel"
      - $ref: "#/definitions/NewYakitPlugin"
  NewYakitPlugin:
    type: object
    required:
      - name
    properties:
      name:
        type: string
  Paging:
    type: object
    required:
      - pagemeta
    properties:
      pagemeta:
        $ref: "#/definitions/PageMeta"
  ActionFailed:
    type: object
    required:
      - from
      - ok
      - reason
    properties:
      from:
        type: string
        description: 来源于哪个 API
      ok:
        type: boolean
        description: 执行状态
      reason:
        type: string
  ActionSucceeded:
    type: object
    required:
      - from
      - ok
    properties:
      from:
        type: string
        description: 来源于哪个 API
      ok:
        type: boolean
        description: 执行状态
  PageMeta:
    type: object
    description: 描述分页信息的元信息
    required:
      - page
      - limit
      - total
      - total_page
    properties:
      page:
        type: integer
        description: 页面索引
        default: 1
      limit:
        type: integer
        description: 页面数据条数限制
        default: 20
      total:
        type: integer
        description: 总共数据条数
      total_page:
        type: integer
        description: 总页数
        default: 1
  GormBaseModel:
    type: object
    required:
      - id
      - created_at
      - updated_at
    properties:
      id:
        type: integer
      created_at:
        type: integer
      updated_at:
        type: integer
  Principle:
    type: object
    required:
      - user
    properties:
      user:
        type: string
